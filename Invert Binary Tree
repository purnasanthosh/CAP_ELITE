Given the root of a binary tree, invert the tree, and return its root.
Example 1:
Input: root = [4,2,7,1,3,6,9]
Output: [4,7,2,9,6,3,1]
Example 2:
Input: root = [2,1,3]
Output: [2,3,1]
class Solution {
    public TreeNode update(TreeNode root){
        if(root.left==null){
            root.left=root.right;
            root.right=null;
        }
       else if(root.right==null){
            root.right=root.left;
            root.left=null;
        }
        else{
            TreeNode temp=root.right;
            root.right=root.left;
            root.left=temp;
        }
        return root;

    }
    public TreeNode invertTree(TreeNode root) {
        if(root==null) return null;
        TreeNode curr=root;
        TreeNode  left=invertTree(curr.left);
        TreeNode right=invertTree(curr.right);
        root=update(root);
        return root;    
    }
}
