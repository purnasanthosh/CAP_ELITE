Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise.
A subtree of a binary tree tree is a tree that consists of a node in tree and all of this node's descendants. The tree tree could also be considered as a subtree of itself.
Example 1:
Input: root = [3,4,5,1,2], subRoot = [4,1,2]
Output: true
Example 2:
Input: root = [3,4,5,1,2,null,null,null,null,0], subRoot = [4,1,2]
Output: false
JAVA CODE SOLUTION:
class Solution {
    public boolean issame(TreeNode root1,TreeNode root2){
        if(root1==null || root2==null) return root1==root2;
        if(root1.val!=root2.val) return false;
        return issame(root1.left,root2.left) && issame(root1.right,root2.right);
    }
    public boolean isSubtree(TreeNode root, TreeNode subRoot) {
        if(root==null) return false;
        if(root.val==subRoot.val) {
            if(issame(root,subRoot)) return true;
        }
    
        return isSubtree(root.left,subRoot) || isSubtree(root.right,subRoot) ;       
    }
}
