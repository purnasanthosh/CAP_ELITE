Given an integer array nums where the elements are sorted in ascending order, convert it to a height-balanced binary search tree.
Example 1:
Input: nums = [-10,-3,0,5,9]
Output: [0,-3,9,-10,null,5]
Explanation: [0,-10,5,null,-3,null,9] is also accepted:
Example 2:
Input: nums = [1,3]
Output: [3,1]
Explanation: [1,null,3] and [3,1] are both height-balanced BSTs.
JAVA CODE:
class Solution {
    public  TreeNode construct(int [] nums,int low,int high){
        if(low>high) return null;
        TreeNode node=new TreeNode(nums[(low+high)/2]);
        node.left=construct(nums,low,(low+high)/2-1);
        node.right=construct(nums,(low+high)/2+1,high);
        return node;

    }
    public TreeNode sortedArrayToBST(int[] nums) {
        TreeNode node=construct(nums,0,nums.length-1);
        return node;
        
    }
}
