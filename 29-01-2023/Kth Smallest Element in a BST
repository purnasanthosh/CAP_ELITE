Given the root of a binary search tree, and an integer k, return the kth smallest value (1-indexed) of all the values of the nodes in the tree.
Example 1:
Input: root = [3,1,4,null,2], k = 1
Output: 1
Example 2:
Input: root = [5,3,6,2,4,null,null,1], k = 3
Output: 3
JAVA CODE:
class Solution {
    int ans=0,res=0,value=0;
    public void findsmall(TreeNode root){
        if(root==null) return;
        findsmall(root.left);
        res=root.val;
        value=value-1;
        if(value==0){
            ans=root.val;
        }
        findsmall(root.right);
    }
    public int kthSmallest(TreeNode root, int k) {
        value=value+k;
        findsmall(root);
        return ans;

        
    }
}
