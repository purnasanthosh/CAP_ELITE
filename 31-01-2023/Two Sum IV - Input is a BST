Given the root of a binary search tree and an integer k, return true if there exist two elements in the BST such that their sum is equal to k, or false otherwise.
Example 1:
Input: root = [5,3,6,2,4,null,7], k = 9
Output: true
Example 2:
Input: root = [5,3,6,2,4,null,7], k = 28
Output: false
JAVA CODE:
class Solution {
    Map<Integer,Integer> map=new HashMap<>();
    public boolean findTarget(TreeNode root, int k) {
        if(root==null) return false;
        if(map.containsKey(k-root.val)){
            return true;  
        }
        else{
            map.put(root.val,1);
        }
        return findTarget(root.left,k) || findTarget(root.right,k);      
    }
}
