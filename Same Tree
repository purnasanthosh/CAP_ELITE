Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).
Example 1:
Input: root = [1,2,2,3,4,4,3]
Output: true
Example 2:
Input: root = [1,2,2,null,3,null,3]
Output: false
JAVA CODE SOLUTION:
class Solution {
    public boolean symmetric(TreeNode r1,TreeNode r2){
        if(r1==null || r2==null) return r1==r2;
        if(r1.val!=r2.val) return false;
       return symmetric(r1.left,r2.right) && symmetric(r1.right,r2.left);


    }
    public boolean isSymmetric(TreeNode root) {
        return symmetric(root.left,root.right);
        
    }
}
